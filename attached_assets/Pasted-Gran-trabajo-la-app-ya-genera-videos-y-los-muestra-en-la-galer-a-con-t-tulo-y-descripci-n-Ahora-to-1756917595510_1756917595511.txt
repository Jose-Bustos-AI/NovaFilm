Gran trabajo: la app ya genera videos y los muestra en la galer√≠a con t√≠tulo y descripci√≥n. Ahora toca hacerla m√°s atractiva visualmente a√±adiendo portadas a cada tarjeta.

üß† Contexto

Actualmente las tarjetas de la galer√≠a muestran un icono gen√©rico. Queremos que cada tarjeta muestre una imagen de portada tomada directamente del video (por ejemplo, el frame del segundo 1). Esa portada debe guardarse y persistir para no recalcularse en cada visita. Si por cualquier motivo no podemos extraerla, se mantiene el icono como fallback.

üõë Regla de oro (NO romper nada)

No toques el flujo que ya funciona: creaci√≥n de jobs, callback del proveedor, guardado en DB, polling, seeds, etc.

Esto es un a√±adido: capturar un frame, guardarlo y mostrarlo.

Si algo falla al generar la portada, no debe afectar a la creaci√≥n ni visualizaci√≥n del video.

‚úÖ Instrucciones
1) Datos / DB

A√±adir (si no existe) el campo thumbnail_url a la tabla videos.

Tipo: text (nullable).

No modificar columnas existentes ni relaciones.

2) Backend: generar la portada al finalizar el video

Lugar: en el callback del proveedor cuando el video pasa a READY y tenemos provider_video_url.

Tarea:

Extraer un frame del video en el segundo 1 (si el video dura < 1s, usar el frame del 0.1s).

Guardar la imagen como .jpg o .png en el mismo storage/CDN donde alojamos los assets de la app.

Estructura sugerida: thumbnails/{taskId}.jpg.

Persistir la URL resultante en videos.thumbnail_url.

Consideraciones:

Si la portada ya existe (por reintentos), no la regeneres; usa la existente (idempotencia).

Si falla la extracci√≥n o subida, registra el error en logs, no lances error al flujo principal.

3) Backfill (opcional pero recomendado)

Crear una tarea puntual para generar thumbnail_url para videos ya READY que a√∫n no la tengan.

Ejecutar solo bajo una bandera de entorno o endpoint de debug (solo dev).

4) Frontend: mostrar la portada en la galer√≠a

En las tarjetas de la galer√≠a y en ‚ÄúRecent Videos‚Äù:

Si thumbnail_url existe ‚Üí usarla como imagen cover (ratio 9:16 o el que corresponda, con object-fit: cover).

Si no existe ‚Üí mantener el icono actual como fallback.

Lazy loading de im√°genes para mejorar UX.

Accesibilidad: alt basado en el t√≠tulo del video.

Mantener todo el estilo actual (bordes, sombras, etiqueta ‚Äú720p‚Äù, etc.).

5) Detalle de video (cuando el usuario abre uno)

Usar la misma thumbnail_url como poster del reproductor (carga m√°s agradable).

No mostrar taskId al usuario (seguir ocult√°ndolo).

Mantener el resto de metadatos actuales.

6) Logs y trazabilidad

Log estructurado cuando:

Se intenta generar la portada (con taskId, userId).

Se guarda la thumbnail_url.

Hay errores (sin interrumpir el flujo del video).

7) Fallbacks y resiliencia

Si el proveedor sirve el video con poca latencia y no da tiempo a extraer frame al vuelo, hacer un retry corto (hasta 2 intentos con backoff peque√±o).

Si tras los reintentos no hay portada, mostrar icono y listo.

8) Pruebas de aceptaci√≥n

Generar un video nuevo y verificar:

videos.thumbnail_url se guarda.

La galer√≠a muestra la imagen como portada.

El detalle usa esa portada como poster.

Verificar backfill en videos antiguos (si se activa).

Simular error de extracci√≥n y comprobar que el video sigue visible y la UI usa el icono.
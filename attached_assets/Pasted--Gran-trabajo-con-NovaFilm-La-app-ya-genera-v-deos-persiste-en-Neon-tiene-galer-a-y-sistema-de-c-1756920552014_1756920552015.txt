¬°Gran trabajo con NovaFilm!

La app ya genera v√≠deos, persiste en Neon, tiene galer√≠a y sistema de cr√©ditos. Ahora toca elevar el login: necesitamos autenticaci√≥n real con Neon (Stack Auth), para dejar atr√°s el login de Replit y solucionar el error de ‚ÄúCerrar sesi√≥n‚Äù.

üß† Contexto

Hoy el login es de Replit Auth y las sesiones se guardan en connect-pg-simple.

La tabla users ya existe y guardamos cr√©ditos, nombre, avatar, etc.

Queremos multiusuario completo con Neon Stack Auth (Google/GitHub + email), RLS activado, y que cada usuario vea solo sus v√≠deos/creditos.

Debe mantenerse todo lo que funciona (generaci√≥n, callbacks, cr√©ditos, galer√≠a, miniaturas cuando las a√±adamos, etc).

üîí REGLA DE ORO (no se puede romper nada)

No rompas la generaci√≥n de v√≠deos, la galer√≠a, ni el consumo de cr√©ditos.

Mant√©n compatibilidad hacia atr√°s con datos ya existentes en users, jobs, videos, sessions/credits_history.

Cualquier cambio en API debe preservar los endpoints actuales o exponer wrappers compatibles.

‚úÖ Instrucciones (paso a paso)

Conectar Neon Stack Auth

Integra Neon Stack Auth (Auth de Neon) como proveedor de identidad.

Habilita Google y GitHub como m√≠nimo, y email magic link si es trivial.

Variables de entorno nuevas esperadas (a√±√°delas a .env + README):

NEON_DATABASE_URL (ya la tenemos),

AUTH_JWT_SECRET o equivalentes de Stack Auth,

AUTH_URL (callback base),

AUTH_GOOGLE_CLIENT_ID/SECRET, AUTH_GITHUB_CLIENT_ID/SECRET.

Modelo de datos y migraci√≥n

Reutiliza la tabla users actual. Si Stack Auth trae su tabla de identidades, mapea su user_id ‚Üí users.id (o guarda el external_id en una columna auth_provider_id).

Aseg√∫rate de que al registrarse por primera vez se cree fila en users con: id, email, first_name, last_name, profile_image_url, credits (iniciales = 10; conserva si ya exist√≠an).

Si el usuario ya exist√≠a por Replit, haz upsert por email.

RLS y aislamiento

Activa Row Level Security y pol√≠ticas:

users: el usuario puede leer/actualizar solo su fila.

videos, jobs, credits_history: solo filas donde user_id = auth.uid().

Mant√©n √≠ndices necesarios (user_id, task_id) y no cambies claves actuales.

Sesiones y logout

Sustituye express-session + connect-pg-simple por la gesti√≥n de sesi√≥n de Stack Auth (JWT/Session cookie seg√∫n SDK).

Exp√≥n rutas:

GET /api/auth/me ‚Üí perfil + cr√©ditos.

POST /api/auth/logout ‚Üí debe borrar sesi√≥n/cookie de Stack Auth.

Arregla el bot√≥n ‚ÄúCerrar sesi√≥n‚Äù para que llame a la nueva ruta y confirme con toast ‚ÄúSesi√≥n cerrada‚Äù.

Protecci√≥n de rutas/acciones

Middleware isAuthenticated actualizado a Stack Auth (verifica sesi√≥n/JWT).

Protege: /api/create-job, /api/refine-prompt, /api/videos, /api/jobs, /api/account/*.

Si no hay sesi√≥n, responde 401 con mensaje en espa√±ol coherente con la UI.

Front-end (sin romper nada)

Reemplaza el flujo de login actual por Neon Auth (Google/GitHub + email).

Mi Cuenta: sigue mostrando perfil, cr√©ditos y bot√≥n ‚ÄúCerrar sesi√≥n‚Äù con la nueva API.

Dashboard: conserva el badge de cr√©ditos y el bloqueo de generaci√≥n si cr√©ditos = 0.

Cr√©ditos y consumo

Mant√©n el descuento de 1 cr√©dito por video en create-job (transacci√≥n con videos/jobs).

En usuarios nuevos v√≠a Neon Auth: asigna 10 cr√©ditos de bienvenida.

No dupliques saldos en migraci√≥n (upsert por email).

Callbacks y ownership

En /api/veo-callback, al cerrar un video: valida que el task_id corresponda al user_id due√±o del job.

No cambies el pipeline de idempotencia; solo asegura que el user scope se respeta con el nuevo auth.

Configuraci√≥n/Docs

A√±ade al README secci√≥n ‚ÄúAuth con Neon‚Äù:

c√≥mo crear credenciales Google/GitHub,

variables de entorno,

c√≥mo probar en desarrollo (URL de callback),

comando de migraciones.

Muestra en logs (modo dev) el auth_provider y userId con cuidado de no loggear tokens.

Pruebas y criterios de aceptaci√≥n

Login con Google y GitHub ‚Üí crea/actualiza users y pone 10 cr√©ditos si es nuevo.

Logout funciona (cookie/JWT invalidado), sin errores en UI.

Con dos cuentas distintas: cada una ve solo sus propios v√≠deos/jobs/creditos.

Intentar crear video sin sesi√≥n ‚Üí 401.

Intentar crear video con cr√©ditos = 0 ‚Üí 402/422 con mensaje claro.

Webhooks de Kie.ai siguen actualizando v√≠deos al due√±o correcto.

RLS: consultas directas a Neon no permiten filtrar datos de otros usuarios.

No-regresiones

No toques nada de generaci√≥n, seeds, parsers, tiempos ni estilos.

Mant√©n endpoints actuales y tipos de respuesta para que el front no falle.

cuando termines, dime:

variables nuevas a√±adidas,

migraciones ejecutadas,

qu√© se elimin√≥ del viejo Replit Auth,

y pega 3 pruebas manuales que hiciste (login, logout, creaci√≥n video con descuento).